// @import compass;

$bubble-d: 4.5rem; // bubble diameter
$bubble-r: .5*$bubble-d; // bubble-radius
$sparkle-d: .375rem;
$sparkle-r: .5*$sparkle-d;
$size : 1rem;

///////////////////////////////////////////////////////////
// Plain SASS Trigonometry Algorithm in Taylor Expansion //
//                                                       //
// Based on                                              //
//      http://japborst.net/posts/sass-sines-and-cosines //
///////////////////////////////////////////////////////////

$pi: 3.14159265359;
$_precision: 10;

@function pow($base, $exp) {
    $value: $base;
    @if $exp > 1 {
        @for $i from 2 through $exp {
            $value: $value * $base;
        }
    }
    @if $exp < 1{
        @for $i from 0 through -$exp {
            $value: $value / $base;
        }
    }
    @return $value;
}

@function fact($num) {
    $fact: 1;
    @if $num > 0{
        @for $i from 1 through $num {
            $fact: $fact * $i;
        }
    }
    @return $fact;
}

@function _to_unitless_rad($angle) {
    @if unit($angle) == "deg" {
        $angle: $angle / 180deg * $pi;
    }
    @if unit($angle) == "rad" {
        $angle: $angle / 1rad;
    }
    @return $angle;
}

@function sin($angle){
    $a: _to_unitless_rad($angle);
    $sin: $a;
    @for $n from 1 through $_precision {
        $sin: $sin + (pow(-1, $n) / fact(2 * $n + 1) ) * pow($a, (2 * $n + 1));
    }
    @return $sin;
}

@function cos($angle){
    $a: _to_unitless_rad($angle);
    $cos: 1;
    @for $n from 1 through $_precision {
        $cos: $cos + ( pow(-1,$n) / fact(2*$n) ) * pow($a,2*$n);
    }
    @return $cos;
}

@function tan($angle){
    @return sin($angle) / cos($angle);
}

@mixin sparkles($k) {
    $shadow-list: ();
    $n-groups: 7;
    $group-base-angle: 360deg/$n-groups;
    $group-distr-r: (1 + $k*.25)*$bubble-r;
    $n-sparkles: 2;
    $sparkle-base-angle: 360deg/$n-sparkles;
    $sparkle-off-angle: 60deg; // offset angle from radius
    $spread-r: -$k*$sparkle-r;

    @for $i from 0 to $n-groups {
        $group-curr-angle: $i*$group-base-angle - 90deg;
        $xg: $group-distr-r*cos($group-curr-angle);
        $yg: $group-distr-r*sin($group-curr-angle);

        @for $j from 0 to $n-sparkles {
            $sparkle-curr-angle: $group-curr-angle +
                $sparkle-off-angle + $j*$sparkle-base-angle;
            $xs: $xg + $sparkle-d*cos($sparkle-curr-angle);
            $ys: $yg + $sparkle-d*sin($sparkle-curr-angle);

            $shadow-list: $shadow-list, $xs $ys 0 $spread-r
            hsl(($i + $j)*$group-base-angle, 100%, 75%);
        }
    }

    box-shadow: $shadow-list;
}

@mixin bubble($ext) {
    transform: scale(1);
    border-color: #cc8ef5;
    border-width: $ext;
}

.toggle-heart {
    position: absolute;
    left: -100vw;

    &:checked + label {
        color: #e2264d;
        filter: none;
        will-change: font-size;
        animation: heart 1s cubic-bezier(.17, .89, .32, 1.49);

        &:before, &:after {
            animation: inherit;
            animation-timing-function: ease-out;
        }

        &:before {
            will-change: transform, border-width, border-color;
            animation-name: bubble;
        }

        &:after {
            will-change: opacity, box-shadow;
            animation-name: sparkles;
        }
    }

    &:focus + label {
        text-shadow: 0 0 3px white,
        0 1px 1px white, 0 -1px 1px white,
        1px 0 1px white, -1px 0 1px white;
    }
}

.toggle-heart {
    align-self: center;
    position: relative;
    font-size: $size;
    user-select: none;
    cursor: pointer;

    &:before, &:after {
        position: absolute;
        z-index: -1;
        top: 50%; left: 50%;
        border-radius: 50%;
        content: '';
    }

    &:before {
        box-sizing: border-box;
        margin: -$bubble-r;
        width: $bubble-d; height: $bubble-d;
        transform: scale(0);
    }

    &:after {
        margin: -$sparkle-r;
        width: $sparkle-d; height: $sparkle-d;
        @include sparkles(1);
    }
}

@keyframes heart {
    0%, 17.5% { font-size: 0; }
}

@keyframes bubble {
    15% { @include bubble($bubble-r); }
    30%, 100% { @include bubble(0); }
}

@keyframes sparkles {
    0%, 20% { opacity: 0; }
    25% {
        opacity: 1;
        @include sparkles(0);
    }
}